<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="11203" started-at="2019-07-24T07:25:14Z" finished-at="2019-07-24T07:25:25Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="11203" started-at="2019-07-24T07:25:14Z" finished-at="2019-07-24T07:25:25Z">
      <class name="softwaretestingmaterial.ExtentReportsClass">
        <test-method status="PASS" signature="startReport()[pri:0, instance:softwaretestingmaterial.ExtentReportsClass@6093dd95]" name="startReport" is-config="true" duration-ms="165" started-at="2019-07-24T07:25:14Z" finished-at="2019-07-24T07:25:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="FAIL" signature="myTest()[pri:0, instance:softwaretestingmaterial.ExtentReportsClass@6093dd95]" name="myTest" duration-ms="4624" started-at="2019-07-24T07:25:14Z" finished-at="2019-07-24T07:25:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at softwaretestingmaterial.ExtentReportsClass.myTest(ExtentReportsClass.java:90)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:softwaretestingmaterial.ExtentReportsClass@6093dd95]" name="getResult" is-config="true" duration-ms="437" started-at="2019-07-24T07:25:19Z" finished-at="2019-07-24T07:25:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=myTest status=FAILURE method=ExtentReportsClass.myTest()[pri:0, instance:softwaretestingmaterial.ExtentReportsClass@6093dd95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="passTest()[pri:0, instance:softwaretestingmaterial.ExtentReportsClass@6093dd95]" name="passTest" duration-ms="4900" started-at="2019-07-24T07:25:19Z" finished-at="2019-07-24T07:25:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:softwaretestingmaterial.ExtentReportsClass@6093dd95]" name="getResult" is-config="true" duration-ms="405" started-at="2019-07-24T07:25:24Z" finished-at="2019-07-24T07:25:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passTest status=SUCCESS method=ExtentReportsClass.passTest()[pri:0, instance:softwaretestingmaterial.ExtentReportsClass@6093dd95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:softwaretestingmaterial.ExtentReportsClass@6093dd95]" name="endReport" is-config="true" duration-ms="644" started-at="2019-07-24T07:25:25Z" finished-at="2019-07-24T07:25:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- softwaretestingmaterial.ExtentReportsClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
